#server port
server.port=8085

# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
# Connection url for the database "apicoordonnees"
spring.datasource.url=jdbc:mysql://localhost:3306/apicoordonnees?createDatabaseIfNotExist=true&autoReconnect=true&useSSL=false&serverTimezone=UTC
# driver class name
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# Username and password
spring.datasource.username=yvan
spring.datasource.password=yvano1105
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto=update
# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
#Enable autoregistration of Jadira Usertypes
# Use Jadira Usertype for mapping Joda Time types
# For Hibernate native properties must be used spring.jpa.properties.* (the
# prefix is stripped before adding them to the entity manager).
spring.jpa.properties.jadira.usertype.autoRegisterUserTypes=true

